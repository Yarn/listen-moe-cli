
version: 2

jobs:
  build:
    docker:
      # - image: rust:1
      - image: circleci/rust:1
    environment:
      TARGET: x86_64-unknown-linux-gnu
      PKG_CONFIG_ALLOW_CROSS: 1
    steps:
      - checkout
      - attach_workspace:
          at: ./release
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      # - run:
      #     name: Install Target
      #     command: rustup target add x86_64-unknown-linux-musl
      - run:
          name: Install Dependencies
          command: sudo apt-get install libasound2-dev libssl-dev
      # - run:
      #     name: Calculate dependencies
      #     command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v7-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build debug
          # command: cargo build --all --all-targets
          command: cargo build --target "$TARGET"
      - run:
          name: Build
          command: cargo build --release --target "$TARGET"
      - run:
          name: prepare release zip
          command: zip --junk-paths "release/$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG-x86_64-unknown-linux-gnu.zip" ./target/x86_64-unknown-linux-gnu/release/listen-moe-cli
      - store_artifacts:
          # path: ./target/x86_64-unknown-linux-gnu/release/listen-moe-cli
          path: ./release
          destination: .
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug
            - target/release
            - target/x86_64-unknown-linux-gnu/debug/.fingerprint
            - target/x86_64-unknown-linux-gnu/debug/build
            - target/x86_64-unknown-linux-gnu/debug/deps
            - target/x86_64-unknown-linux-gnu/release/.fingerprint
            - target/x86_64-unknown-linux-gnu/release/build
            - target/x86_64-unknown-linux-gnu/release/deps
            # - /usr/local/rustup
          key: v7-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run all tests
          command: cargo test --target "$TARGET"
  publish-github-release:
    docker:
      - image: cibuilds/github:0.13
    requires:
      - build
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^\d+\.\d+\.\d+.*$/
    steps:
      - attach_workspace:
          at: ./release
      - run:
          name: Deploy Release
          command: |
            # ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./release/
